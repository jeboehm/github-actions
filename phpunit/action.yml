name: "PHPUnit"
description: "Install shopware and run phpunit"
author: "shopware AG"
branding:
  color: "blue"
  icon: "download"

inputs:
  extensionName:
    description: "Your extension name"
    required: true
  shopwareVersion:
    description: |
      With the default `.auto`, the workflow tries to find a shopware version using the shopware-version action.

      For example, if the current ref is next-1234, it will try to find the ref next-1234 in shopware/shopware. If there's no matching ref, it will use shopwareVersionFallback
    required: false
    default: ".auto"
  shopwareVersionFallback:
    description: Fallback version in case there's no matching branch
    required: false
    default: trunk
  phpVersion:
    description: PHP version to use
    required: false
    default: "8.2"
  mysqlVersion:
    description: Mysql image to use or buildin to use the builtin mysql
    required: false
    default: "builtin"
  dependencies:
    description: JSON list defining dependencies
    required: false
  uploadCoverage:
    description: "Upload coverage to codecov. Requires token in CODECOV_TOKEN"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - uses: shopware/github-actions/shopware-version@main
      with:
        fallback: ${{ inputs.shopwareVersionFallback }}
      id: version
      if: ${{ inputs.shopwareVersion == '.auto' }}
    - name: Setup Shopware
      uses: shopware/setup-shopware@main
      with:
        shopware-version: ${{ steps.version.outputs.shopware-version || inputs.shopwareVersion }}
        php-version: ${{ inputs.phpVersion }}
        mysql-version: ${{ inputs.mysqlVersion }}
        php-extensions: pcov
    - name: Clone Extension
      uses: actions/checkout@v4
      with:
        path: custom/plugins/${{ inputs.extensionName }}
    - name: Clone Dependencies
      shell: bash
      if: inputs.dependencies
      env:
        DEPS: ${{ inputs.dependencies }}
      run: |
        for dep in $(echo "$DEPS" | envsubst | jq -c '.[]'); do
          dep_name=$(echo "$dep" | jq -r '.name')
          dep_repo=$(echo "$dep" | jq -r '.repo')
          git clone "$dep_repo" "custom/plugins/$dep_name"
        done
    - name: Install extension with Composer
      shell: bash
      run: |
        composer require $(composer -d custom/plugins/${{ inputs.extensionName }} config name)
        if [[ ! -L "custom/plugins/${{ inputs.extensionName }}" ]]; then
          echo "custom/plugins/${{ inputs.extensionName }} should be a symlink"
          exit 1
        fi
    - name: Run PHPUnit
      shell: bash
      working-directory: custom/plugins/${{ inputs.extensionName }}
      run: ${{ github.workspace }}/vendor/bin/phpunit --coverage-clover clover.xml
    - name: Upload Coverage
      if: inputs.uploadCoverage == true
      uses: codecov/codecov-action@v4
      with:
        root_dir: ${{ github.workspace }}/custom/plugins/${{ inputs.extensionName }}
        working-directory: ${{ github.workspace }}/custom/plugins/${{ inputs.extensionName }}
        files: ./clover.xml
